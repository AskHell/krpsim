use std::str::FromStr;
use std::collections::HashMap;

grammar;

Process:

AssociativeList: HashMap<Name, Num> = {
    "(" <l:(<Associative> ";")*> <e:Associative> ")" => {
        // from Vec<Associative> to HashMap<Name, Num>
    }
}

NameList: Vec<Name> = {
    "(" <l:(<Name> ";")*> <e:Name> ")" => {
        let mut vecNameList = l;

        vecNameList.push(e);
        vecNameList
    }
}

Associative: (Name, Num) = {
    <a:Name> ":" <b:Num> => {
        (a, b)
    }
}

Num: u32 = <s:r"[0-9]+"> => u32::from_str(s).unwrap();
Name: String = {
    r"[a-zA-Z_]+" => String::from(<>),
};
